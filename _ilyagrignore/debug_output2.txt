üêü complete -C "tmux splitw " | head
[src/complete.rs:1285:53] &options = [
    CompleteEntryOpt {
        option: "",
        comp: "(__fish_complete_subcommand)",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "(__fish_tmux_clients)",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_panes)",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "print to stdout",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "display-message display",
        desc: "Display a message",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_clients)",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from command-prompt",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "Comma-separated list of prompts",
        conditions: [
            "__fish_seen_subcommand_from command-prompt",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "I",
        comp: "",
        desc: "Comma-separated list of initial text for each prompt",
        conditions: [
            "__fish_seen_subcommand_from command-prompt",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "command-prompt",
        desc: "Open the command prompt in a client",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_sessions)",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from show-environment showenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "global environment",
        conditions: [
            "__fish_seen_subcommand_from show-environment showenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-environment showenv",
        desc: "bind key to command",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_sessions)",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "unset variable",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "remove from environment before starting a new process",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "global environment",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "set-environment setenv",
        desc: "Set or unset an environment variable",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "backspace buffer-limit command-alias default-terminal copy-command escape-time editor exit-empty exit-unattached extended-keys focus-events history-file message-limit prompt-history-limit set-clipboard terminal-features terminal-overrides user-keys activity-action assume-paste-time base-index bell-action default-command default-shell default-size destroy-unattached detach-on-destroy display-panes-active-colour display-panes-colour display-panes-time display-time history-limit key-table lock-after-time lock-command message-command-style message-style mouse prefix renumber-windows repeat-time set-titles set-titles-string silence-action status status-format status-interval status-justify status-keys status-left status-left-length status-left-style status-position status-right status-right-length status-right-style status-style update-environment visual-activity visual-bell visual-silence word-separators aggressive-resize automatic-rename automatic-rename-format clock-mode-colour clock-mode-style fill-character main-pane-height main-pane-width copy-mode-match-style copy-mode-mark-style copy-mode-current-match-style mode-keys mode-style monitor-activity monitor-bell monitor-silence other-pane-height other-pane-width pane-active-border-style pane-base-index pane-border-format pane-border-indicators pane-border-lines pane-border-status pane-border-style popup-style popup-border-style popup-border-lines window-status-activity-style window-status-bell-style window-status-current-format window-status-current-style window-status-format window-status-last-style window-status-separator window-status-style window-size wrap-search allow-passthrough allow-rename alternate-screen cursor-colour pane-colours cursor-style remain-on-exit remain-on-exit-format scroll-on-clear synchronize-panes window-active-style window-style",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set set-option show-options; and not __fish_seen_subcommand_from backspace buffer-limit command-alias default-terminal copy-command escape-time editor exit-empty exit-unattached extended-keys focus-events history-file message-limit prompt-history-limit set-clipboard terminal-features terminal-overrides user-keys activity-action assume-paste-time base-index bell-action default-command default-shell default-size destroy-unattached detach-on-destroy display-panes-active-colour display-panes-colour display-panes-time display-time history-limit key-table lock-after-time lock-command message-command-style message-style mouse prefix renumber-windows repeat-time set-titles set-titles-string silence-action status status-format status-interval status-justify status-keys status-left status-left-length status-left-style status-position status-right status-right-length status-right-style status-style update-environment visual-activity visual-bell visual-silence word-separators aggressive-resize automatic-rename automatic-rename-format clock-mode-colour clock-mode-style fill-character main-pane-height main-pane-width copy-mode-match-style copy-mode-mark-style copy-mode-current-match-style mode-keys mode-style monitor-activity monitor-bell monitor-silence other-pane-height other-pane-width pane-active-border-style pane-base-index pane-border-format pane-border-indicators pane-border-lines pane-border-status pane-border-style popup-style popup-border-style popup-border-lines window-status-activity-style window-status-bell-style window-status-current-format window-status-current-style window-status-format window-status-last-style window-status-separator window-status-style window-size wrap-search allow-passthrough allow-rename alternate-screen cursor-colour pane-colours cursor-style remain-on-exit remain-on-exit-format scroll-on-clear synchronize-panes window-active-style window-style",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "A",
        comp: "",
        desc: "Include inherited options",
        conditions: [
            "__fish_seen_subcommand_from show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "H",
        comp: "",
        desc: "Include hooks",
        conditions: [
            "__fish_seen_subcommand_from show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "Only show value",
        conditions: [
            "__fish_seen_subcommand_from show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "No error if unset",
        conditions: [
            "__fish_seen_subcommand_from show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_panes)",
        desc: "Target pane",
        conditions: [
            "__fish_seen_subcommand_from set set-option show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "Append",
        conditions: [
            "__fish_seen_subcommand_from set set-option",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "Suppress ambiguous option errors",
        conditions: [
            "__fish_seen_subcommand_from set set-option",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "o",
        comp: "",
        desc: "Prevent override",
        conditions: [
            "__fish_seen_subcommand_from set set-option",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "Unset option, also in child panes",
        conditions: [
            "__fish_seen_subcommand_from set set-option",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "Unset option",
        conditions: [
            "__fish_seen_subcommand_from set set-option",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "Expand format",
        conditions: [
            "__fish_seen_subcommand_from set set-option",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "Global option",
        conditions: [
            "__fish_seen_subcommand_from set set-option show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "Server option",
        conditions: [
            "__fish_seen_subcommand_from set set-option show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "Window option",
        conditions: [
            "__fish_seen_subcommand_from set set-option show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "Pane option",
        conditions: [
            "__fish_seen_subcommand_from set set-option show-options",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-options",
        desc: "Show set options",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "set set-option",
        desc: "Set or unset option",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "vi-edit emacs-edit vi-choice emacs-choice vi-copy emacs-copy",
        desc: "key table",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "command bound to key without a prefix (if any) removed",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "binding for command mode",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "remove all key bindings",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "unbind-key unbind",
        desc: "unbind the command bound to key",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_panes)",
        desc: "target pane",
        conditions: [
            "__fish_seen_subcommand_from send-prefix",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "2",
        comp: "",
        desc: "use secondary prefix",
        conditions: [
            "__fish_seen_subcommand_from send-prefix",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "send-prefix",
        desc: "send the prefix key",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_panes)",
        desc: "target pane",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "R",
        comp: "",
        desc: "reset terminal state",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "send-keys send",
        desc: "list all key bindings",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "vi-edit emacs-edit vi-choice emacs-choice vi-copy emacs-copy",
        desc: "key table",
        conditions: [
            "__fish_seen_subcommand_from list-keys lsk",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-keys lsk",
        desc: "list all key bindings",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "vi-edit emacs-edit vi-choice emacs-choice vi-copy emacs-copy",
        desc: "choose key table for binding",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "key may repeat",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "make the binding work without using a prefix key",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "bind for command mode instead of normal mode",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "bind-key bind",
        desc: "bind key to command",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target",
        conditions: [
            "__fish_seen_subcommand_from list-panes lsp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target client",
        conditions: [
            "__fish_seen_subcommand_from display-panes displayp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target window",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew  rotate-window rotatew select-window selectw unlink-window unlinkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target window",
        conditions: [
            "__fish_seen_subcommand_from kill-window killw last-pane lastp next-layout nextl previous-layout prevl rename-window renamew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "destination window",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp link-window linkw move-window movew new-window neww swap-window swapw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "source window",
        conditions: [
            "__fish_seen_subcommand_from link-window linkw move-window movew swap-window swapw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format string",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp list-panes lsp list-windows lsw new-window neww choose-client choose-tree",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_sessions)",
        desc: "target session",
        conditions: [
            "__fish_seen_subcommand_from last-window lastw list-windows lsw next-window next previous-window prev",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_panes)",
        desc: "destination pane",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp move-pane movep swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_panes)",
        desc: "target pane",
        conditions: [
            "__fish_seen_subcommand_from kill-pane killp pipe-pane pipep resize-pane resizep respawn-pane respawnp select-layout selectl select-pane selectp split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_panes)",
        desc: "target pane",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep choose-client choose-tree customize-mode find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "(__fish_tmux_panes)",
        desc: "source pane",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp join-pane joinp move-pane movep swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "unlink-window unlinkw",
        desc: "unlink target-window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "swap-window swapw",
        desc: "swap two windows",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "swap-pane swapp",
        desc: "swap two panes",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "split-window splitw",
        desc: "create a new pane by splitting target-pane",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "select-window selectw",
        desc: "activate specific window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "select-pane selectp",
        desc: "activate specific pane",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "even-horizontal even-vertical main-horizontal main-horizontal-mirrored main-vertical main-vertical-mirrored tiled",
        desc: "predefined layout",
        conditions: [
            "__fish_seen_subcommand_from select-layout selectl",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "select-layout selectl",
        desc: "rearrange panes according to a given layout",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "rotate-window rotatew",
        desc: "rotate panes within a window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "respawn-window respawnw",
        desc: "reactivate a window where a command exited",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "respawn-pane respawnp",
        desc: "reactivate a pane where a command exited",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "resize-window resizew",
        desc: "resize a window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "resize-pane resizep",
        desc: "resize a pane",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "rename-window renamew",
        desc: "rename a window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "previous-window prev",
        desc: "move to the previous window in the session",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "previous-layout prevl",
        desc: "rearrange panes in a window according to the previous layout",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "pipe-pane pipep",
        desc: "pipe output from pane to a shell command",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "next-window next",
        desc: "move to the next window in the session",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "next-layout nextl",
        desc: "rearrange panes in a window according to the next layout",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "new-window neww",
        desc: "create a new window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "move-window movew",
        desc: "move window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-windows lsw",
        desc: "list windows",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-panes lsp",
        desc: "list panes",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "link-window linkw",
        desc: "link source window to destination window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "last-window lastw",
        desc: "select the previusly selected window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "last-pane lastp",
        desc: "select the previusly selected pane",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-window killw",
        desc: "destroy a window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-pane killp",
        desc: "destroy a pane",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "join-pane joinp move-pane movep",
        desc: "split destination pane and move source pane into one of the halves",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "find-window findw",
        desc: "interactively choose window matching pattern",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "display-panes displayp",
        desc: "display a visible indicator for each pane",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "customize-mode",
        desc: "interactively customize settings",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "choose-tree",
        desc: "interactively choose session/window/pane",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "choose-client",
        desc: "interactively choose client",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "capture-pane capturep",
        desc: "capture contents of a pane into a buffer",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "break-pane breakp",
        desc: "break pane off into a new window",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format string",
        conditions: [
            "__fish_seen_subcommand_from list-clients lsc list-sessions ls",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "(__fish_tmux_clients)",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_clients)",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach lock-client lockc refresh-client refresh show-messages showmsgs suspend-client suspendc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "(__fish_tmux_sessions)",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "(__fish_tmux_sessions)",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach at a new-session new has-session has kill-session list-clients lsc lock-session locks rename-session rename switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "toggle if client is read-only",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "move client to the previous session",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "move client to the next session",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "move client to the last session",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "switch-client switchc",
        desc: "Switch the current session for client target-client to target-session",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "suspend-client suspendc",
        desc: "send SIGTSTP signal to client (tty stop)",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "start-server start",
        desc: "start tmux server if not running; do not create a session",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from source-file source",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: true,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "source-file source",
        desc: "execute commands from path",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-messages showmsgs",
        desc: "save msgs in status bar in per-client msg log",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "rename-session rename",
        desc: "rename session",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "update client status bar",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "refresh-client refresh",
        desc: "refresh client",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "y",
        comp: "",
        desc: "height",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "x",
        comp: "",
        desc: "width",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "group-name",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "session-name",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "window-name",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "don\'t apply update-environment option",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "print information about the new session after creation",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "if -A is specified, detach other clients attached to the session",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "A",
        comp: "",
        desc: "attach to existing session if session-name already exists",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "don\'t attach to current window",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "new-session new",
        desc: "create a new session with name session-name",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "lock-session locks",
        desc: "lock session",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "lock-client lockc",
        desc: "lock client",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-sessions ls",
        desc: "list all sessions",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-commands lscm",
        desc: "list syntax for all tmux commands",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-clients lsc",
        desc: "list all attached clients",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-session",
        desc: "destroy session, close its windows, and detach all its clients",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-server",
        desc: "kill tmux server, clients, and sessions",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "has-session has",
        desc: "report error and exit with 1 if the session does not exist",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "SIGHUP parent process of client, likely causing it to exit",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "detach-client detach",
        desc: "detach current client",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "attach in read-only mode",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach at a",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "detach other clients",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach at a",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "attach-session attach at a",
        desc: "attach to existing session",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "Full path to server socket. If set, -L is ignored.",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "L",
        comp: "",
        desc: "Specify the name of the server socket to use",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "Alternate config file",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "Execute command using the default shell",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "V",
        comp: "",
        desc: "Report the tmux version",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "Request verbose logging",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "Flag explicitly informs tmux that UTF-8 is supported",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "Set the quiet server option",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "Behave as a login shell",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "8",
        comp: "",
        desc: "Like -2, but indicates that the terminal supports 88 colours",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "2",
        comp: "",
        desc: "Force tmux to assume the terminal supports 256 colours",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "attach-session attach bind-key bind break-pane breakp capture-pane capturep choose-buffer  choose-client  choose-tree  clear-history clearhist clear-prompt-history clearphist clock-mode  command-prompt  confirm-before confirm copy-mode  customize-mode  delete-buffer deleteb detach-client detach display-menu menu display-message display display-popup popup display-panes displayp find-window findw has-session has if-shell if join-pane joinp kill-pane killp kill-server  kill-session  kill-window killw last-pane lastp last-window last link-window linkw list-buffers lsb list-clients lsc list-commands lscm list-keys lsk list-panes lsp list-sessions ls list-windows lsw load-buffer loadb lock-client lockc lock-server lock lock-session locks move-pane movep move-window movew new-session new new-window neww next-layout nextl next-window next paste-buffer pasteb pipe-pane pipep previous-layout prevl previous-window prev refresh-client refresh rename-session rename rename-window renamew resize-pane resizep resize-window resizew respawn-pane respawnp respawn-window respawnw rotate-window rotatew run-shell run save-buffer saveb select-layout selectl select-pane selectp select-window selectw send-keys send send-prefix  server-access  set-buffer setb set-environment setenv set-hook  set-option set set-window-option setw show-buffer showb show-environment showenv show-hooks  show-messages showmsgs show-options show show-prompt-history showphist show-window-options showw source-file source split-window splitw start-server start suspend-client suspendc swap-pane swapp swap-window swapw switch-client switchc unbind-key unbind unlink-window unlinkw wait-for wait",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from list-commands lscm",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from wait-for wait",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from wait-for wait",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "L",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from wait-for wait",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "wait-for wait",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from unlink-window unlinkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "k",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from unlink-window unlinkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "unlink-window unlinkw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "key-table",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from unbind-key unbind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "unbind-key unbind",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "key-table",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from switch-client switchc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "switch-client switchc",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "dst-window",
        conditions: [
            "__fish_seen_subcommand_from swap-window swapw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-window",
        conditions: [
            "__fish_seen_subcommand_from swap-window swapw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from swap-window swapw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "swap-window swapw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "dst-pane",
        conditions: [
            "__fish_seen_subcommand_from swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-pane",
        conditions: [
            "__fish_seen_subcommand_from swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from swap-pane swapp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "swap-pane swapp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from suspend-client suspendc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "suspend-client suspendc",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "start-server start",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "size",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "environment",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "I",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "h",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from split-window splitw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "split-window splitw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from source-file source",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from source-file source",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from source-file source",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from source-file source",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from source-file source",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "source-file source",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from show-window-options showw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-window-options showw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-window-options showw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-window-options showw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "type",
        conditions: [
            "__fish_seen_subcommand_from show-prompt-history showphist",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-prompt-history showphist",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "H",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "A",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-options show",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-options show",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from show-messages showmsgs",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-messages showmsgs",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "J",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-messages showmsgs",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-messages showmsgs",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from show-hooks ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-hooks ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-hooks ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-hooks ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-hooks ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from show-environment showenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-environment showenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-environment showenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "h",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from show-environment showenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-environment showenv",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "buffer-name",
        conditions: [
            "__fish_seen_subcommand_from show-buffer showb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "show-buffer showb",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from set-window-option setw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-window-option setw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-window-option setw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "o",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-window-option setw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-window-option setw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-window-option setw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-window-option setw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "set-window-option setw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "o",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-option set",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "set-option set",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from set-hook ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-hook ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-hook ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "R",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-hook ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-hook ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-hook ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-hook ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "set-hook ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "g",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "h",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-environment setenv",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "set-environment setenv",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from set-buffer setb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "new-buffer-name",
        conditions: [
            "__fish_seen_subcommand_from set-buffer setb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "buffer-name",
        conditions: [
            "__fish_seen_subcommand_from set-buffer setb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-buffer setb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from set-buffer setb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "set-buffer setb",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from server-access ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from server-access ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from server-access ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from server-access ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from server-access ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from server-access ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "server-access ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from send-prefix ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "2",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-prefix ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "send-prefix ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "repeat-count",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "X",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "R",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "M",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "K",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "H",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from send-keys send",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "send-keys send",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from select-window selectw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-window selectw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-window selectw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-window selectw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-window selectw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "select-window selectw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "title",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "R",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "m",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "M",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "L",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-pane selectp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "select-pane selectp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from select-layout selectl",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-layout selectl",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "o",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-layout selectl",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-layout selectl",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from select-layout selectl",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "select-layout selectl",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "buffer-name",
        conditions: [
            "__fish_seen_subcommand_from save-buffer saveb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from save-buffer saveb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "save-buffer saveb",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from run-shell run",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "delay",
        conditions: [
            "__fish_seen_subcommand_from run-shell run",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from run-shell run",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "C",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from run-shell run",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from run-shell run",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "run-shell run",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from rotate-window rotatew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from rotate-window rotatew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from rotate-window rotatew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from rotate-window rotatew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "rotate-window rotatew",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from respawn-window respawnw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "environment",
        conditions: [
            "__fish_seen_subcommand_from respawn-window respawnw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from respawn-window respawnw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "k",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from respawn-window respawnw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "respawn-window respawnw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from respawn-pane respawnp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "environment",
        conditions: [
            "__fish_seen_subcommand_from respawn-pane respawnp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from respawn-pane respawnp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "k",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from respawn-pane respawnp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "respawn-pane respawnp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "y",
        comp: "",
        desc: "height",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "x",
        comp: "",
        desc: "width",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "R",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "L",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "A",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-window resizew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "resize-window resizew",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "y",
        comp: "",
        desc: "height",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "x",
        comp: "",
        desc: "width",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "R",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "M",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "L",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from resize-pane resizep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "resize-pane resizep",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from rename-window renamew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "rename-window renamew",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from rename-session rename",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "rename-session rename",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "pane:report",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "flags",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "C",
        comp: "",
        desc: "XxY",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "B",
        comp: "",
        desc: "name:what:format",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "A",
        comp: "",
        desc: "pane:state",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "U",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "R",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "L",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from refresh-client refresh",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "refresh-client refresh",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from previous-window prev",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from previous-window prev",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "previous-window prev",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from previous-layout prevl",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "previous-layout prevl",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from pipe-pane pipep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "o",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from pipe-pane pipep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "O",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from pipe-pane pipep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "I",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from pipe-pane pipep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "pipe-pane pipep",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from paste-buffer pasteb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "buffer-name",
        conditions: [
            "__fish_seen_subcommand_from paste-buffer pasteb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "separator",
        conditions: [
            "__fish_seen_subcommand_from paste-buffer pasteb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from paste-buffer pasteb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from paste-buffer pasteb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from paste-buffer pasteb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "paste-buffer pasteb",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from next-window next",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from next-window next",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "next-window next",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from next-layout nextl",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "next-layout nextl",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "window-name",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "environment",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "k",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-window neww",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "new-window neww",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "y",
        comp: "",
        desc: "height",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "x",
        comp: "",
        desc: "width",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "session-name",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "window-name",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "flags",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "environment",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "X",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "D",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "A",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from new-session new",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "new-session new",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "dst-window",
        conditions: [
            "__fish_seen_subcommand_from move-window movew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-window",
        conditions: [
            "__fish_seen_subcommand_from move-window movew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-window movew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "k",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-window movew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-window movew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-window movew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-window movew",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "move-window movew",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "dst-pane",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-pane",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "size",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "h",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from move-pane movep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "move-pane movep",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from lock-session locks",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "lock-session locks",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "lock-server lock",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from lock-client lockc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "lock-client lockc",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from load-buffer loadb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "buffer-name",
        conditions: [
            "__fish_seen_subcommand_from load-buffer loadb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "load-buffer loadb",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from list-windows lsw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from list-windows lsw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from list-windows lsw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from list-windows lsw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-windows lsw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from list-sessions ls",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from list-sessions ls",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-sessions ls",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from list-panes lsp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from list-panes lsp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from list-panes lsp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from list-panes lsp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from list-panes lsp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-panes lsp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "key-table",
        conditions: [
            "__fish_seen_subcommand_from list-keys lsk",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "prefix-string",
        conditions: [
            "__fish_seen_subcommand_from list-keys lsk",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from list-keys lsk",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from list-keys lsk",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "1",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from list-keys lsk",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-keys lsk",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from list-commands lscm",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-commands lscm",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from list-clients lsc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from list-clients lsc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from list-clients lsc",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-clients lsc",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from list-buffers lsb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from list-buffers lsb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "list-buffers lsb",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "dst-window",
        conditions: [
            "__fish_seen_subcommand_from link-window linkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-window",
        conditions: [
            "__fish_seen_subcommand_from link-window linkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "k",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from link-window linkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from link-window linkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from link-window linkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from link-window linkw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "link-window linkw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from last-window last",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "last-window last",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from last-pane lastp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from last-pane lastp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from last-pane lastp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from last-pane lastp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "last-pane lastp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-window",
        conditions: [
            "__fish_seen_subcommand_from kill-window killw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from kill-window killw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-window killw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from kill-session ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "C",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from kill-session ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from kill-session ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-session ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-server ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from kill-pane killp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from kill-pane killp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "kill-pane killp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "dst-pane",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-pane",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "size",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "h",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from join-pane joinp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "join-pane joinp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from if-shell if",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from if-shell if",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from if-shell if",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "if-shell if",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from has-session has",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "has-session has",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "i",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "C",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from find-window findw",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "find-window findw",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from display-panes displayp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "duration",
        conditions: [
            "__fish_seen_subcommand_from display-panes displayp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-panes displayp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-panes displayp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "display-panes displayp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "y",
        comp: "",
        desc: "position",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "x",
        comp: "",
        desc: "position",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "width",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "title",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "border-style",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "style",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "h",
        comp: "",
        desc: "height",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "environment",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "start-directory",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "border-lines",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "C",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "B",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-popup popup",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "display-popup popup",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "delay",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "v",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "l",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "I",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-message display",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "display-message display",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "y",
        comp: "",
        desc: "position",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "x",
        comp: "",
        desc: "position",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "title",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "border-style",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "style",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "H",
        comp: "",
        desc: "selected-style",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "C",
        comp: "",
        desc: "starting-choice",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "border-lines",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "O",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "M",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from display-menu menu",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "display-menu menu",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "shell-command",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from detach-client detach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "detach-client detach",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "buffer-name",
        conditions: [
            "__fish_seen_subcommand_from delete-buffer deleteb",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "delete-buffer deleteb",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from customize-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from customize-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from customize-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from customize-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from customize-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "customize-mode ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-pane",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "u",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "M",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "H",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from copy-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "copy-mode ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from confirm-before confirm",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "prompt",
        conditions: [
            "__fish_seen_subcommand_from confirm-before confirm",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "confirm_key",
        conditions: [
            "__fish_seen_subcommand_from confirm-before confirm",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "y",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from confirm-before confirm",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from confirm-before confirm",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "confirm-before confirm",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "type",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-client",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "prompts",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "I",
        comp: "",
        desc: "inputs",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "i",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "k",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "1",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from command-prompt ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "command-prompt ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from clock-mode ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "clock-mode ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "type",
        conditions: [
            "__fish_seen_subcommand_from clear-prompt-history clearphist",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "clear-prompt-history clearphist",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from clear-history clearhist",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "H",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from clear-history clearhist",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "clear-history clearhist",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "O",
        comp: "",
        desc: "sort-order",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "K",
        comp: "",
        desc: "key-format",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "w",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "G",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-tree ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "choose-tree ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "O",
        comp: "",
        desc: "sort-order",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "K",
        comp: "",
        desc: "key-format",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-client ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "choose-client ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "O",
        comp: "",
        desc: "sort-order",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "K",
        comp: "",
        desc: "key-format",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "filter",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "Z",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from choose-buffer ",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "choose-buffer ",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-pane",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "S",
        comp: "",
        desc: "start-line",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "end-line",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "buffer-name",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "q",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "p",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "J",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "e",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "C",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from capture-pane capturep",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "capture-pane capturep",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "dst-window",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "s",
        comp: "",
        desc: "src-pane",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "window-name",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "F",
        comp: "",
        desc: "format",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "P",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "b",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "a",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from break-pane breakp",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "break-pane breakp",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "N",
        comp: "",
        desc: "note",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "T",
        comp: "",
        desc: "key-table",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "n",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from bind-key bind",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "bind-key bind",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "t",
        comp: "",
        desc: "target-session",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "f",
        comp: "",
        desc: "flags",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "c",
        comp: "",
        desc: "working-directory",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "x",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "r",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "E",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "d",
        comp: "",
        desc: "",
        conditions: [
            "__fish_seen_subcommand_from attach-session attach",
        ],
        typ: Short,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "attach-session attach",
        desc: "",
        conditions: [
            "__fish_use_subcommand",
        ],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: false,
            force_files: false,
            requires_param: false,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
    CompleteEntryOpt {
        option: "",
        comp: "",
        desc: "",
        conditions: [],
        typ: ArgsOnly,
        result_mode: CompletionMode {
            no_files: true,
            force_files: false,
            requires_param: true,
        },
        flags: CompleteFlags(
            AUTO_SPACE | DONT_ESCAPE_TILDES,
        ),
    },
]
benchmarks/
BSDmakefile
build.rs
build_tools/
Cargo.lock
Cargo.toml
CHANGELOG.rst
cmake/
CMakeFiles/
CMakeLists.txt
